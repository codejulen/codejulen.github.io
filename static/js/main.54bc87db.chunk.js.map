{"version":3,"sources":["fonts/Bemio.otf","fonts/Apercu.woff","fonts/Apercu.woff2","components/Home/logo.png","fonts/fonts.js","components/Home/index.style.js","components/Home/index.js","components/Dish/Header/index.style.js","components/Dish/Header/index.js","components/Dish/MovieList/index.style.js","components/Dish/MovieList/MovieCard.js","components/Dish/MovieList/FocusedMovie.js","components/Dish/MovieList/index.js","components/Dish/Footer/index.js","components/Dish/index.style.js","components/Dish/index.js","components/Art/Navigation/index.style.js","components/Art/Navigation/index.js","components/Art/PhotoSet/index.js","components/Art/index.style.js","components/Art/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createGlobalStyle","Bemio","ApercuWoff2","ApercuWoff","HomeWrapper","styled","div","HomeTitle","h1","HomeBody","HomeLogo","img","HomeGrid","nicknames","Home","useState","nickname","setNickname","useEffect","Math","floor","random","length","Grid","container","xs","sm","src","logo","width","href","to","pathname","HeaderStyle","Header","Typography","gutterBottom","variant","component","MovieWrapper","ButtonWrapper","button","FocusedWrapper","MovieCard","poster","title","overview","submitter","item","Card","CardMedia","alt","image","CardContent","gutterButtom","color","FocusedMovie","contributor","showtimeTime","moment","utc","localDate","local","duration","subtract","Paper","elevation","spacing","format","humanize","MovieList","movies","movieList","setMovieList","submitterFilter","setSubmitterFilter","seenFilter","setSeenFilter","uniqueSubmitters","map","m","filter","s","idx","indexOf","focusedMovie","queue","watched","handleSubmitterFilter","e","target","value","alignItems","onClick","toString","justify","direction","FooterStyle","Footer","role","aria-label","DishWrapper","Dish","document","NavigationWrapper","Navigation","onBodyChange","Button","CardWrapper","PhotoSet","typeName","display","photoSets","setName","description","gallery","url","caption","ArtWrapper","Art","photoBody","setPhotoBody","App","className","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54bc87db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bemio.5db8bbfb.otf\";","module.exports = __webpack_public_path__ + \"static/media/Apercu.52448f2d.woff\";","module.exports = __webpack_public_path__ + \"static/media/Apercu.21c5c0d9.woff2\";","module.exports = __webpack_public_path__ + \"static/media/logo.2927903d.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport Bemio from \"./Bemio.otf\";\r\nimport ApercuWoff from \"./Apercu.woff\";\r\nimport ApercuWoff2 from \"./Apercu.woff2\";\r\n\r\nexport default createGlobalStyle`\r\n@font-face {\r\n    font-family: 'Bemio';\r\n    src: local('Bemio'),\r\n    url(${Bemio}) format(\"opentype\");\r\n    font-weight: normal;\r\n    font-style: normal;\r\n\r\n}    \r\n@font-face {\r\n    font-family: 'Apercu';\r\n    src: local('Apercu'),\r\n    url(${ApercuWoff2}) format('woff2'),\r\n    url(${ApercuWoff}) format('woff');\r\n    font-weight: 300;\r\n    font-style: normal;\r\n}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HomeWrapper = styled.div`\r\n  background-color: #384b87;\r\n  height: 100vh;\r\n  color: #f49c77;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const HomeTitle = styled.h1`\r\n  font-family: \"Bemio\";\r\n  font-size: 48px;\r\n  font-weight: 300;\r\n  font-style: normal;\r\n  padding: 0 4px 0 4px;\r\n`;\r\n\r\nexport const HomeBody = styled.div`\r\n  font-family: \"Apercu\";\r\n  padding: 0 4px 0 4px;\r\n\r\n  h3 {\r\n    font-weight: 200;\r\n  }\r\n  h5 {\r\n    font-weight: 250;\r\n    font-size: 18px;\r\n  }\r\n  a:link,\r\n  a:visited {\r\n    color: #f49c77;\r\n    text-decoration: underline;\r\n  }\r\n  a:hover,\r\n  a:active {\r\n    background-color: #f49c77;\r\n    color: #384b87;\r\n  }\r\n`;\r\n\r\nexport const HomeLogo = styled.img`\r\n  max-width: 100%;\r\n  text-align: center;\r\n  height: auto;\r\n  padding: 2em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: block;\r\n`;\r\n\r\nexport const HomeGrid = styled.div`\r\n  // margin: auto\r\n  // width: 70%;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport logo from \"./logo.png\";\r\nimport {\r\n  HomeTitle,\r\n  HomeLogo,\r\n  HomeBody,\r\n  HomeWrapper,\r\n  HomeGrid,\r\n} from \"./index.style\";\r\n\r\nconst nicknames = [\"Juju\", \"Julen\", \"Beep Boop Computer Man\"];\r\n\r\nconst Home = () => {\r\n  const [nickname, setNickname] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setNickname(nicknames[Math.floor(Math.random() * nicknames.length)]);\r\n  }, []);\r\n\r\n  return (\r\n    <HomeWrapper>\r\n      <HomeGrid>\r\n        <Grid container>\r\n          <Grid xs={12} sm={5}>\r\n            <HomeLogo src={logo} width={275} />\r\n          </Grid>\r\n          <Grid xs={12} sm={7}>\r\n            <HomeTitle>\r\n              Hello!\r\n              <br />\r\n              I'm Julian Zabala.\r\n            </HomeTitle>\r\n            <HomeBody>\r\n              <h3>Some people call me {nickname}.</h3>\r\n              <p>\r\n                I'm a software engineer obsessed with cameras, keyboards, and my\r\n                cat.\r\n              </p>\r\n              <h5>\r\n                <a href=\"https://www.linkedin.com/in/jzabala/\">LinkedIn </a>\r\n              </h5>\r\n              <h5>\r\n                <Link to={{ pathname: \"/art\" }}>Photo Projects</Link>\r\n              </h5>\r\n              <h5>\r\n                <a href=\"https://www.youtube.com/watch?v=5oVLvP8wAqU\">\r\n                  Short Films\r\n                </a>\r\n              </h5>\r\n              <h5>\r\n                <Link to={{ pathname: \"/dish\" }}>\r\n                  Project: Dishcord Movie Nights\r\n                </Link>\r\n              </h5>\r\n            </HomeBody>\r\n          </Grid>\r\n        </Grid>\r\n      </HomeGrid>\r\n    </HomeWrapper>\r\n  );\r\n  //     return (<div>      <div class=\"logo\">\r\n  //     <img src=\"public/logo-color.png\" />\r\n  //   </div>\r\n  //   <div class=\"right-text\">\r\n  //     <h1>Hello! I'm Julian Zabala.</h1>\r\n  //     <h3>\r\n  //       Some people call me <span id=\"nickname\"></span>.\r\n  //     </h3>\r\n  //     <p>\r\n  //       I'm a software engineer obsessed with cameras, keyboards, and my cat.\r\n  //     </p>\r\n  //     <h5>\r\n  //       <a href=\"https://www.linkedin.com/in/jzabala/\">\r\n  //         Professional Worky-Work Beep Boop Stuff\r\n  //       </a>\r\n  //     </h5>\r\n  //     <h5>\r\n  //       <a href=\"https://codejulen.github.io/art\">To See With My Eyes</a>\r\n  //     </h5>\r\n  //     <h5>\r\n  //       <a href=\"https://www.instagram.com/marble_tofu/\">My Favorite Cat</a>\r\n  //     </h5>\r\n  //     <h5>\r\n  //       <a href=\"https://www.youtube.com/watch?v=5oVLvP8wAqU\">\r\n  //         Inner Monologuing On The Outside\r\n  //       </a>\r\n  //     </h5>\r\n  //     <h5>\r\n  //       <a href=\"https://codejulen.github.io/dish\">Dishcord Movie Nights</a>\r\n  //     </h5>\r\n  //   </div>)\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderStyle = styled.div`\r\n  margin: auto;\r\n  width: 50%;\r\n  padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { HeaderStyle } from \"./index.style\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <HeaderStyle>\r\n      <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n        Heyo Dishcord!\r\n      </Typography>\r\n      <Typography gutterBottom variant=\"body\" component=\"p\">\r\n        Every week (ish), we try to coordinate movie nights where we all gather\r\n        together virtually to watch a movie in the Discord. Below are all the\r\n        movies on the list.\r\n      </Typography>\r\n    </HeaderStyle>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MovieWrapper = styled.div`\r\n  margin: auto;\r\n  width: 80%;\r\n  padding: 10px;\r\n\r\n  h2 span {\r\n    background-color: #fdd0f1;\r\n    border-radius: 4px;\r\n    padding: 0.1em 0.2em;\r\n    color: #72bbb4;\r\n  }\r\n  h1 span {\r\n    background-color: #fdd0f1;\r\n    border-radius: 8px;\r\n    padding: 0.1em 0.2em;\r\n    color: #72bbb4;\r\n  }\r\n`;\r\nexport const ButtonWrapper = styled.button`\r\n  background-color: #ffffff;\r\n  border-radius: 4px;\r\n  border: 1px;\r\n  font-size: 20px;\r\n  font-style: italic;\r\n  margin: 0.5em 0.25em;\r\n  padding: 0.25em 1em;\r\n  &:active,\r\n  &:visited {\r\n    border: 0;\r\n    background-color: #fdd0f1;\r\n  }\r\n`;\r\n\r\nexport const FocusedWrapper = styled.div`\r\n  margin-bottom: 60px;\r\n  p {\r\n    padding: 0.5em;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { CardMedia } from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const MovieCard = ({ poster, title, overview, submitter }) => {\r\n  return (\r\n    <Grid container item xs={12} sm={4}>\r\n      <Card>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          width={200}\r\n          image={poster}\r\n          title={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterButtom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {overview}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  poster: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  contributor: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Paper, CardMedia, Typography } from \"@material-ui/core\";\r\nimport { FocusedWrapper } from \"./index.style\";\r\n\r\nexport const FocusedMovie = ({ poster, title, overview, contributor }) => {\r\n  var dateFormat = \"MMMM Do YYYY, h:mm a\";\r\n  var showtimeTime = moment.utc(\r\n    \"September 12 2020, 2:00\",\r\n    \"MMMM Do YYYY, h:mm a\"\r\n  );\r\n  var localDate = showtimeTime.local();\r\n  var duration = moment.duration(showtimeTime).subtract(moment());\r\n  return (\r\n    <FocusedWrapper>\r\n      <Paper elevation={3}>\r\n        <h1>\r\n          <span>Up Next</span>\r\n        </h1>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={3}>\r\n            <CardMedia component=\"img\" image={poster} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={9}>\r\n            <p>\r\n              <Typography gutterBottom variant=\"body\" component=\"h1\">\r\n                {title}\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"body\" component=\"h3\">\r\n                Showtime: {localDate.format(dateFormat)} (that's in{\" \"}\r\n                {duration.humanize()}\r\n                !)\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"body\" component=\"h4\">\r\n                Submitted By: {contributor}\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"body\" component=\"p\">\r\n                {overview}\r\n              </Typography>\r\n            </p>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </FocusedWrapper>\r\n  );\r\n};\r\n\r\nFocusedMovie.propTypes = {\r\n  poster: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  contributor: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FocusedMovie;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MovieWrapper, ButtonWrapper } from \"./index.style\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport movies from \"./movies\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport FocusedMovie from \"./FocusedMovie\";\r\n\r\nconst MovieList = () => {\r\n  // Hooks\r\n  const [movieList, setMovieList] = useState(movies);\r\n  const [submitterFilter, setSubmitterFilter] = useState(null);\r\n  const [seenFilter, setSeenFilter] = useState(null);\r\n  const uniqueSubmitters = movies\r\n    .map((m) => m.submitter)\r\n    .filter((s, idx) => movies.map((m) => m.submitter).indexOf(s) === idx);\r\n  const focusedMovie = movies.filter((m) => m.queue);\r\n\r\n  // useEffect pog\r\n  useEffect(() => {\r\n    if (seenFilter != null && submitterFilter != null) {\r\n      setMovieList(\r\n        movies.filter(\r\n          (m) =>\r\n            (seenFilter ? m.watched : !m.watched) &&\r\n            m.submitter === submitterFilter\r\n        )\r\n      );\r\n    } else {\r\n      if (seenFilter != null) {\r\n        setMovieList(\r\n          movies.filter((m) => (seenFilter ? m.watched : !m.watched))\r\n        );\r\n      } else if (submitterFilter != null) {\r\n        setMovieList(movies.filter((m) => m.submitter === submitterFilter));\r\n      }\r\n    }\r\n  }, [submitterFilter, seenFilter]);\r\n\r\n  // Handlers\r\n  const handleUnseenFilter = () => {\r\n    setSeenFilter(false);\r\n  };\r\n  const handleWatchedFilter = () => {\r\n    setSeenFilter(true);\r\n  };\r\n  const handleClearFilters = () => {\r\n    setSeenFilter(null);\r\n    setSubmitterFilter(null);\r\n    setMovieList(movies);\r\n  };\r\n  const handleSubmitterFilter = (e) => {\r\n    setSubmitterFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <MovieWrapper>\r\n      <Grid container spacing={3} alignItems=\"center\">\r\n        <Grid item xs={12} sm={6}>\r\n          <center>\r\n            <h2>\r\n              <span>Seen</span>\r\n            </h2>\r\n            <h1>{movies.filter((m) => m.watched).length}</h1>\r\n          </center>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <center>\r\n            <h2>\r\n              <span>Unseen</span>\r\n            </h2>\r\n            <h1>{movies.filter((m) => !m.watched).length}</h1>\r\n          </center>\r\n        </Grid>\r\n      </Grid>\r\n      {focusedMovie.length === 1 && (\r\n        <FocusedMovie\r\n          title={focusedMovie[0].title}\r\n          contributor={focusedMovie[0].submitter}\r\n          overview={focusedMovie[0].overview}\r\n          poster={focusedMovie[0].poster}\r\n        />\r\n      )}\r\n      <div>\r\n        <h2>\r\n          <span>Filter by Seen</span>\r\n        </h2>\r\n        <ButtonWrapper onClick={handleClearFilters}>All</ButtonWrapper>\r\n        <ButtonWrapper onClick={handleWatchedFilter}>Seen</ButtonWrapper>\r\n        <ButtonWrapper onClick={handleUnseenFilter}>Unseen</ButtonWrapper>\r\n      </div>\r\n      <div>\r\n        <h2>\r\n          <span>Filter By Contributor</span>\r\n        </h2>\r\n        {uniqueSubmitters.map((m) => (\r\n          <ButtonWrapper onClick={handleSubmitterFilter} value={m}>\r\n            {m}\r\n          </ButtonWrapper>\r\n        ))}\r\n      </div>\r\n      {seenFilter !== submitterFilter && (\r\n        <h4>\r\n          {seenFilter !== null && <span>Seen: {seenFilter.toString()}</span>}{\" \"}\r\n          {submitterFilter !== null && (\r\n            <span>Submitter: {submitterFilter}</span>\r\n          )}\r\n        </h4>\r\n      )}\r\n      {movieList.length === 0 && (\r\n        <p>No movies found with the chosen filters.</p>\r\n      )}\r\n      <br />\r\n      <br />\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        direction=\"row\"\r\n        alignItems=\"flex-start\"\r\n        spacing={2}\r\n      >\r\n        {movieList.map((m) => (\r\n          <MovieCard\r\n            title={m.title}\r\n            poster={m.poster}\r\n            overview={m.overview}\r\n            contributor={m.submitter}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </MovieWrapper>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FooterStyle = styled.div`\r\n  padding: 1em;\r\n  text-align: center;\r\n`;\r\nexport const Footer = () => {\r\n  return (\r\n    <FooterStyle>\r\n      {\" \"}\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          Made with{\" \"}\r\n          <span role=\"img\" aria-label=\"heart\">\r\n            ❤️\r\n          </span>{\" \"}\r\n          using React. By <a href=\"https://codejulen.github.io\">Julian</a> for{\" \"}\r\n          <a href=\"https://twitch.tv/imdishrag\">Dish</a> and her wonderful\r\n          community.\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <a href=\"https://github.com/codejulen/codejulen.github.io/blob/master/CHANGELOG.md#dishcord-movie-nights\">\r\n            Changelog\r\n          </a>\r\n        </Grid>\r\n      </Grid>\r\n    </FooterStyle>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DishWrapper = styled.div`\r\n  background: #72bbb4;\r\n  color: #fdd0f1;\r\n`;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport MovieList from \"./MovieList\";\r\nimport Footer from \"./Footer\";\r\nimport { DishWrapper } from \"./index.style\";\r\nconst Dish = () => {\r\n  document.title = \"Dishcord Movie Nights\";\r\n  return (\r\n    <DishWrapper>\r\n      <Header />\r\n      <MovieList />\r\n      <Footer />\r\n    </DishWrapper>\r\n  );\r\n};\r\n\r\nexport default Dish;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavigationWrapper = styled.div`\r\n  margin: auto;\r\n  padding: 1em;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  padding: 0em;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { NavigationWrapper, ButtonWrapper } from \"./index.style\";\r\n\r\nconst Navigation = ({ onBodyChange }) => {\r\n  const onClickSkin = () => {\r\n    onBodyChange(\"skin\");\r\n  };\r\n  const onClickDreaming = () => {\r\n    onBodyChange(\"dreaming\");\r\n  };\r\n  const onClickGrowing = () => {\r\n    onBodyChange(\"growing\");\r\n  };\r\n  return (\r\n    <NavigationWrapper>\r\n      <Grid container xs={12} direction=\"column\">\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          julian zabala\r\n        </Typography>\r\n        <ButtonWrapper>\r\n          <Grid container xs={12}>\r\n            <Grid container xs={12} sm={4}>\r\n              <Button onClick={onClickSkin}>\r\n                We'll see creation come undone\r\n              </Button>\r\n            </Grid>\r\n            <Grid container xs={12} sm={4}>\r\n              <Button onClick={onClickDreaming}>\r\n                These bones that bound will be gone\r\n              </Button>\r\n            </Grid>\r\n            <Grid container xs={12} sm={4}>\r\n              <Button onClick={onClickGrowing}>\r\n                We'll stir our spirits 'til we're one\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </ButtonWrapper>\r\n      </Grid>\r\n    </NavigationWrapper>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  onBodyChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Card } from \"@material-ui/core\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport photoSets from \"./photoSets.json\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CardWrapper = styled.div`\r\n  padding: 1em;\r\n`;\r\nconst PhotoSet = ({ typeName }) => {\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" display=\"block\" gutterBottom>\r\n        {photoSets[typeName].setName}\r\n      </Typography>\r\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n        {photoSets[typeName].description}\r\n      </Typography>\r\n      {photoSets[typeName].gallery.map((m) => (\r\n        <CardWrapper>\r\n          <Card>\r\n            <CardMedia component=\"img\" image={m.url} title={m.caption} />\r\n          </Card>\r\n        </CardWrapper>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nPhotoSet.propTypes = {\r\n  typeName: PropTypes.string.isRequired,\r\n};\r\nexport default PhotoSet;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ArtWrapper = styled.div`\r\n  text-align: center;\r\n  max-width: 1080px;\r\n  margin: auto;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Navigation from \"./Navigation\";\r\nimport PhotoSet from \"./PhotoSet\";\r\nimport { ArtWrapper } from \"./index.style\";\r\n\r\nconst Art = () => {\r\n  const [photoBody, setPhotoBody] = useState(\"base\");\r\n  const onBodyChange = (value) => {\r\n    setPhotoBody(value);\r\n  };\r\n  return (\r\n    <ArtWrapper>\r\n      <Navigation onBodyChange={onBodyChange} />\r\n      <PhotoSet typeName={photoBody} />\r\n    </ArtWrapper>\r\n  );\r\n};\r\n\r\nexport default Art;\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport GlobalFonts from \"./fonts/fonts\";\r\nimport Home from \"./components/Home\";\r\nimport Dish from \"./components/Dish\";\r\nimport Art from \"./components/Art\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <GlobalFonts />\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/art\" component={Art} />\r\n          <Route exact path=\"/dish\" component={Dish} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}